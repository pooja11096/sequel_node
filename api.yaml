swagger: "2.0"
info: 
  title: swagger with sequelize
  description: swagger with sequelize and myssql database
  version: 2.0
  contact: 
    email: p@gmail.com

schemes: [http,https]

paths:
  /msg:
    get:
      summary: Get a message
      description: Get a message
      responses:
        200:
          description: OK
          schema:
            type: string
        

  /getdata:
    get:
      summary: get all data
      description: get all users by findall
      responses:
        200:
            description: OK
            schema:
              type: object
              # properties:
              #   id:
              #     type: integer
              #   name:
              #     type: string

  /adddata:
    post:
      summary: create data
      description: create data
      consumes:
        application/json
      produces:
        application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#components/schema/users'
      responses:
        200:
          description: OK
          schema:
            type: object
        400:
          description: user error
        500:
          description: internal server error
            # properties:
            #   id:
              
  /getbyid/{id}:
    get:
      summary: get user by id
      description: get user by id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
        # - in: body
        #   name: body
        #   schema:
        #     $ref: '#components/schema/users'

      responses:
        200:
          description: OK
          schema:
            type: object

  /update/{id}:
    put:
      produces:
        application/json
      consumes:
        application/json
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          schema:
            $ref: '#components/schema/users'
      responses:
        200:
          description: OK
          schema:
            type: object
            
  /delete/{id}:
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK





components:
  schema:
    users:
      type: object
      parameters:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

     
               

  # /user:
  #   get:
  #     summary: returns a user
  #     description: getting one user
  #     responses:
  #       200:
  #         description: success
  #         schema:
  #           type: object
  #           properties:
  #             id:
  #               type: integer
  #             name:
  #               type: string
                 

