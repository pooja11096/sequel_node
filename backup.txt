  // let data = await users.findOne({ where:{
    //   id:req.params.id
    // },
    //   include: [{association:db.userDetails}]
    // }).then(function(user){
    //   if(req.body.user_detail){
    //     return  user.user_detail.update(newData,{where:{user_id:req.params.id}})
    //   }
    // })
   
    // .then(function(userd){
    //   if(req.body.user_detail){
    //       return userd.user_detail.update(newData,{where:{user_id:req.params.id}}).then(function(result){
    //         return result;  
    //       })
    //   }else{
    //     throw new Error("no data found");
    //   }
    // });


      // await users.update(newData,{where:{id:req.params.id }})
      // await user_detail.update(newData,{where:{user_id:req.params.id}})

      // await user_detail.save();


      // self.updateUser = async (req, res) => {
//   try {
//     // let id = req.params.id;
//     let newData = {
//       firstname: req.body.firstname,
//       lastname: req.body.lastname,
//       email: req.body.email,
//       user_detail:req.body.user_detail,
//       posts: req.body.posts   
//     };
//     console.log(newData);
//     let data = users.update(newData,{ where: { id: req.params.id } },{
//       include: [{association:db.userDetails},
//         {

//           association: db.userPost,
//           include: [db.postTag]
//         },
//       ],
//     });

//     console.log(data);

//     if (data && data.id) {
//       await user_detail.update({
//         // inserts data in user_detail table (onetoone)
//         password: req.body.password,
//         where: {
//           user_id: data.id,
//         },
//       });

//       let postlength = req.body.posts.length;
//       var postid = [];
//       var tagid = [];

//       if (req.body.posts) {
//         for (var i = 0; i < postlength; i++) {
//           let postData = {
//             name: req.body.posts[i].name,
//             title: req.body.posts[i].title,
//             content: req.body.posts[i].content,
//             user_id: data.id,
//           };

//           const insertedPost = await posts.create(postData); // inserts data in posts table (onetomany )
//           postid.push(insertedPost.id);

//           let tagL = req.body.posts[i].tags.length;
//           if (tagL) {
//             for (var j = 0; j < tagL; j++) {
//               let tagData = {
//                 name: req.body.posts[i].tags[j].name,
//               };
//               const insertedTag = await tags.create(tagData); // inserts data in tags table (manytomany )
//               tagid.push(insertedTag.id);

//               await post_tags.create({
//                 //inserts data in pivot table post_tags
//                 postId: insertedPost.id,
//                 tagId: insertedTag.id,
//               });
//             }
//           }
//         }
//       }

//       console.log("postids", postid);
//       console.log("tagids", tagid);
//     }

//     return res.status(200).json({
//       message: "data updated",
//     });
//   } catch (error) {
//     console.log({ error });
//   }
// };


self.createUser = async (req, res) => {
  if (!req.body.firstname || !req.body.lastname || !req.body.email) {
    res.status(500).send({ message: "Bad request" });
  }
  try {
    // const newUser = {
    //   firstname: req.body.firstname,
    //   lastname: req.body.lastname,
    //   email: req.body.email,
    //   post: req.body.posts,

    // };

    // let data = await users.create(newUser); //creates user

    // if (data && data.id) {
    //   await user_detail.create({
    //     // inserts data in user_detail table (onetoone)
    //     password: req.body.password,
    //     user_id: data.id,
    //   });

    //   let postlength = req.body.posts.length;
    //   var postid = [];
    //   var tagid = [];

    //   if (req.body.posts) {
    //     for (var i = 0; i < postlength; i++) {
    //       let postData = {
    //         name: req.body.posts[i].name,
    //         title: req.body.posts[i].title,
    //         content: req.body.posts[i].content,
    //         user_id: data.id,
    //       };

    //       const insertedPost = await posts.create(postData); // inserts data in posts table (onetomany )
    //       postid.push(insertedPost.id);

    //       let tagL = req.body.posts[i].tags.length;
    //       if (tagL) {
    //         for (var j = 0; j < tagL; j++) {
    //           let tagData = {
    //             name: req.body.posts[i].tags[j].name,
    //           };
    //           const insertedTag = await tags.create(tagData); // inserts data in tags table (manytomany )
    //           tagid.push(insertedTag.id);

    //           await post_tags.create({
    //             //inserts data in pivot table post_tags
    //             postId: insertedPost.id,
    //             tagId: insertedTag.id,
    //           });
    //         }
    //       }
    //     }
    //   }

    //   console.log("postids", postid);
    //   console.log("tagids", tagid);
    // }
    let postD = [];
    let tagD = [];
    let DD = {};

    if (req.body.posts) {
      let postL = req.body.posts.length;
      
      for (var i = 0; i < postL; i++) {
        if (req.body.posts.length) {
          let tagL = req.body.posts[i].tags.length;

          let postData = {
            name: req.body.posts[i].name,
            title: req.body.posts[i].title,
            content: req.body.posts[i].content,
          };              

          if (tagL) {
            for (var j = 0; j < tagL; j++) {
              var tagData = {
                tags: {
                  name: req.body.posts[i].tags[j].name
                },
              };
              //  tagD.push(tagData);
              // let ob = Object.assign({postData,tagData});
              // console.log("ob",ob);
             
              // const cA = Array.prototype.concat(postD,tagData);
              // console.log("ca",cA);
              // Array.prototype.push.apply(postD,tagData);
              // Object.assign({DD,tagData})
              // var ob={
              //   tags:{}
              // }

              // var obj = Object.assign(ob,tagData);
              // console.log("obj",obj);
              console.log("tagData",tagData);
              var D = {...postData,...tagData};
            console.log("d",D);

            }
            
            postD.push(D);
          }
        }
      }
    }

    console.log("postdata", postD);
    console.log("tagdata", tagD);

    let data = await users.create(
      {
        firstname: req.body.firstname,
        lastname: req.body.lastname,
        email: req.body.email,
        user_detail:req.body.user_detail,
        posts: req.body.posts    
      },
      {
        include: [{association:db.userDetails},
          {

            association: db.userPost,
            include: [db.postTag]
          },
        ],
      }
    );
    return res.status(200).json({
      message: "data",
      data: data,
    });
  } catch (err) {
    console.log({ err });
  }
};


// self.searching = async (req, res) => {
//   try {
//     let { firstname, lastname, email } = req.query;

//     // let query = req.params.query;
//     const data = await users.findAll({
//       where: {
//         [Op.or]: [
//           {
//             firstname: { [Op.like]: `%${firstname}%` },
//           },
//           {
//             lastname: { [Op.like]: `%${lastname}%` },
//           },
//           {
//             email: { [Op.like]: `%${email}%` },
//           },
//         ],
//       },
//     });

//     res.status(200).json(data);
//   } catch (error) {
//     console.log({ error });
//   }
// };

// self.paginationSorting = async (req, res) => {
//   try {
//     const pageNum = Number.parseInt(req.query.page);
//     const sizeNum = Number.parseInt(req.query.size);

//     // const search_key = req.query.search;

//     let page = 1;
//     if (!Number.isNaN(pageNum) && pageNum > 0) {
//       page = pageNum;
//     }

//     let size = 1;
//     if (!Number.isNaN(sizeNum) && sizeNum > 0 && sizeNum < 10) {
//       size = sizeNum;
//     }

//     console.log("page", page);
//     console.log("size", size);

//     const data = await users.findAndCountAll({
//       //   order: [["firstname", "ASC"]],

//       limit: size,
//       offset: page * size,
//     });

//     return res.status(200).json({
//       count: data.length,
//       data: data,
//     });
//   } catch (error) {
//     console.log({ error });
//   }
// };

// self.Update = async (req,res) =>{

//   try{
//     let id = req.params.id;
//     let data = await users.update(req.body,{
//       where:{
//         id:id
//       }
//     }).then(async function(){
//       await users.findOne({where:{id:id},include:[posts]})
//       .then(async function(user){
//         await posts.findOrCreate({where: {
//           // firstname:req.body.firstname,
//           // lastname:req.body.lastname,
//           // email:req.body.email,
//           // id:id
//           name: req.body.posts[0].name,
//           title: req.body.posts[0].title,
//           content: req.body.posts[0].content,
//           // user_id: req.params.id,

         
//         }}).then((post) =>{
//           user.setPosts();
//         })
//       })
//     })

//     return res.status(200).json({
//       success:true,
//       data:data
//     })
//   }catch (error) {
//     console.log({ error });
//   }
//   // try{
//   //   let id = req.params.id;
//   //   let data = await posts.update(req.body,{
//   //     where:{
//   //       user_id:id
//   //     }
//   //   }).then(async function(){
//   //     await posts.findOne({where:{id:id},include:[users]})
//   //     .then(async function(post){
//   //       await users.findOrCreate({where: {
//   //         firstname:req.body.firstname,
//   //         lastname:req.body.lastname,
//   //         email:req.body.email,
//   //         id:id
         
//   //       }}).then((user) =>{
//   //         post.setUser(user.id);
//   //       })
//   //     })
//   //   })

//   //   return res.status(200).json({
//   //     success:true,
//   //     data:data
//   //   })
//   // }catch (error) {
//   //   console.log({ error });
//   // }
// }

// self.Upd = async (req,res) =>{
//   try{
//     let id = req.params.id;
     
//     let data = await users.findAll({where:{id:id}, include:[db.posts]}).then
    


    
//     return res.status(200).json({
//       success:true,
//       data:data
//     })
//   }catch(err){
//     return res.send(err);
//   }
// }

// self.updateIt = async (req, res) => {
//   try {
//     let id = req.params.id;
//     let newData = {
//       firstname: req.body.firstname,
//       lastname: req.body.lastname,
//       email: req.body.email,
//       posts: req.body.posts,
//     };

//     let postD = [];
//     let tagD = [];

//     if (req.body.posts) {
//       let postL = req.body.posts.length;

//       for (var i = 0; i < postL; i++) {
//         if (req.body.posts.length) {
//           let tagL = req.body.posts[i].tags.length;

//           let postData = {
//             name: req.body.posts[i].name,
//             title: req.body.posts[i].title,
//             content: req.body.posts[i].content,
//           };
//           postD.push(postData);
//         }
//       }
//     }

//     console.log("postdata", postD);

//     // let pData={
//     //   name:
//     // }
//     let pData = {
//       name: req.body.posts[0].name,
//       title: req.body.posts[0].title,
//       content: req.body.posts[0].content,
//       user_id: req.params.id, 
//     };

//     let data = await users
//       .update(
//         {
//           firstname: req.body.firstname,
//           lastname: req.body.lastname,
//           email: req.body.email,
//           posts: req.body.posts
//         },

//         {
//           where: {
//             id: id,
//           },
//         }
//       )
//       .then(async function () {
//         await users
//           .findByPk(id, {
//             include: [
//               {
//                 association: db.userPost,
//                 include: [db.postTag],
//               },
//             ],
//           })
//           .then(async function (user) {
//             await posts
//               .findOrCreate({
//                 where: {
//                   name: req.body.posts[0].name,
//                   title: req.body.posts[0].title,
//                   content: req.body.posts[0].content,
//                   user_id: req.params.id,
//                 },
//               })
//               .then((post) => {
//                 user.setPosts(post.id);
//               });
//           });
//       });
//     return res.status(200).json({
//       message: "data updated",
//       data: data,
//     });
//   } catch (error) {
//     console.log({ error });
//   }
// };

// self.updateAll = async (req, res) => {
//   try {
//     let id = req.params.id;
//     let newData = {
//       firstname: req.body.firstname,
//       lastname: req.body.lastname,
//       email: req.body.email,
//       user_detail: req.body.user_detail,
//     };

//     await users
//       .update(newData, {
//         where: {
//           id: id,
//         },
//       })
//       .then(async function () {
//         await users.findOne({ where: { id: id } }).then(async function (user) {
//           await user.user_detail.update(req.body.user_detail, {
//             where: { user_id: id },
//           });
//         });
//       });

//     return res.status(200).json({
//       message: "data updated",
//       data: data,
//     });
//   } catch (err) {
//     res.send(err);
//   }
// };



// self.deleteData = async (req, res) => {
//   try {
//     let id = req.params.id;
//     let data = await users.destroy(
//       {
//         where: {
//           id: id,
//         },
//       },
//       {
//         include: [
//           { association: db.userDetails },
//           {
//             association: db.userPost,
//             include: [db.postTag],
//           },
//         ],
//       }
//     );
//     if (data === 1) {
//       return res.send("data deleted");
//     } else {
//       return res.status(400).json({
//         success: false,
//         message: "data not found",
//       });
//     }
//   } catch (err) {
//     return res.status(500).json({
//       success: "false",
//       error: err,
//     });
//   }
// };